// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogDisable extends ethereum.Event {
  get params(): LogDisable__Params {
    return new LogDisable__Params(this);
  }
}

export class LogDisable__Params {
  _event: LogDisable;

  constructor(event: LogDisable) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LogEnable extends ethereum.Event {
  get params(): LogEnable__Params {
    return new LogEnable__Params(this);
  }
}

export class LogEnable__Params {
  _event: LogEnable;

  constructor(event: LogEnable) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LogDisableUser extends ethereum.Event {
  get params(): LogDisableUser__Params {
    return new LogDisableUser__Params(this);
  }
}

export class LogDisableUser__Params {
  _event: LogDisableUser;

  constructor(event: LogDisableUser) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LogEnableUser extends ethereum.Event {
  get params(): LogEnableUser__Params {
    return new LogEnableUser__Params(this);
  }
}

export class LogEnableUser__Params {
  _event: LogEnableUser;

  constructor(event: LogEnableUser) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InstaAccountModified extends ethereum.SmartContract {
  static bind(address: Address): InstaAccountModified {
    return new InstaAccountModified("InstaAccountModified", address);
  }

  implementations(): Address {
    let result = super.call(
      "implementations",
      "implementations():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_implementations(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementations",
      "implementations():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  version(): BigInt {
    let result = super.call("version", "version():(uint256)", []);

    return result[0].toBigInt();
  }

  try_version(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("version", "version():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _implementations(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class Constructor1Call extends ethereum.Call {
  get inputs(): Constructor1Call__Inputs {
    return new Constructor1Call__Inputs(this);
  }

  get outputs(): Constructor1Call__Outputs {
    return new Constructor1Call__Outputs(this);
  }
}

export class Constructor1Call__Inputs {
  _call: Constructor1Call;

  constructor(call: Constructor1Call) {
    this._call = call;
  }

  get _instaIndex(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Constructor1Call__Outputs {
  _call: Constructor1Call;

  constructor(call: Constructor1Call) {
    this._call = call;
  }
}
